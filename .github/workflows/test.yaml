name: Test
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'
defaults:
  run:
    shell: bash
jobs:
  test:
    name: rsmpi
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.rust == 'nightly' }}
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: ubuntu-22.04
            rust: nightly
            mpi_package: libmpich-dev
            cargo_flags: --all-features
            cargo_update: true
          - os: ubuntu-22.04
            rust: stable
            mpi_package: libmpich-dev
            cargo_flags: --all-features
          - os: ubuntu-22.04
            rust: 1.78.0
            mpi_package: libmpich-dev
            cargo_flags: --all-features
          - os: macos-latest
            rust: stable
            mpi_package: open-mpi
            cargo_flags: --all-features
          - os: ubuntu-latest
            rust: stable
            mpi_package: libopenmpi-dev
            cargo_flags: --all-features
          - os: windows-2025
            rust: stable
            mpi_package: intelmpi
            cargo_flags: --all-features
          - os: windows-2025
            rust: stable
            mpi_package: msmpi
            cargo_flags: --features derive,complex
    steps:
      - uses: actions/checkout@v4
      - name: Install (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y llvm-dev libclang-dev pkgconf ${{ matrix.mpi_package }}
      - name: Install (MacOS)
        if: runner.os == 'macOS'
        # Workaround for intermittent failures with OMPI https://github.com/open-mpi/ompi/issues/7393
        run: |
          brew install llvm@19 ${{ matrix.mpi_package }}
          echo TMPDIR=/tmp | tee -a $GITHUB_ENV
          ## The following two lines are needed on MacOS if the runtime feature is disabled
          # echo PATH="/opt/homebrew/opt/llvm@19/bin:$PATH" | tee -a $GITHUB_ENV
          # echo DYLD_LIBRARY_PATH=$(/opt/homebrew/opt/llvm@19/bin/llvm-config --libdir) | tee -a $GITHUB_ENV
          env
      - name: Install (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install llvm --version 20.1.2 --allow-downgrade -y
          sh ci/install-mpi-windows.sh ${{ matrix.mpi_package }}
          env
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{matrix.rust}}
      - name: Cargo update
        if: ${{ matrix.cargo_update }}
        run: cargo update --verbose
      - name: Cargo Test ${{ matrix.cargo_flags }}
        run: cargo test --workspace ${{ matrix.cargo_flags }}
      - name: Parallel Examples
        run: |
          cargo install --force cargo-mpirun
          ci/run-examples.sh ${{ matrix.cargo_flags }}
